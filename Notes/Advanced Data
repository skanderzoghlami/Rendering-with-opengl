The advanced data chapter talks about how we pass data to a VBO,
just as a recap of what we usually do, generate vao bind it, then generate a vbo and bind it, after that we pass all data to the VBO in a manner that we define as xyzrgbuv|xyzrgbuv|xyzrgbuv|xyzrgbuv.. and so on,the function we use is glBufferData, this is organised but in some places the go-to version was always loading the buffer as xyz|xyz|rgb|rgb|uv|uv since mose 3D models around present data as list of xyz then list of normals etc..which make it easier to process them, to load the data the second way we use glBufferSubData, ofc we need to be super careful with indices when we change, this is as I see it for the moment is just a matter of preference, cause the old way is more performant since  for the vertex shader, all vertices data will be next to each other so easier to load them.. this approach is I think good when want to use uniform buffer objects which we'll see in advanced GLSL chapter.